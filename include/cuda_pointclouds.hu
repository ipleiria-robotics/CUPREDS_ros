#ifndef CUDA_POINTCLOUDS_H_
#define CUDA_POINTCLOUDS_H_

#include <cuda_runtime.h>
#include <pcl/point_types.h>
#include <pcl/point_cloud.h>

__host__ void setPointCloudLabelCuda(const pcl::PointCloud<pcl::PointXYZRGBL>::Ptr& cloud, std::uint32_t label);
__global__ void setPointLabelKernel(pcl::PointXYZRGBL *points, std::uint32_t label, int num_points);

__host__ void transformPointCloudCuda(const pcl::PointCloud<pcl::PointXYZRGBL>::Ptr&, Eigen::Affine3d transform);
__global__ void transformPointKernel(pcl::PointXYZRGBL *points, Eigen::Matrix4d transform, int num_points);

#endif